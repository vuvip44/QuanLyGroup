@model QuanLy.ViewModel.Require.User.UpdateUserViewModel
@using QuanLy.Models.Constants

@{
    ViewData["Title"] = "Edit User";
}

<h1>Edit User</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Account" class="control-label"></label>
        <input asp-for="Account" class="form-control" />
        <span asp-validation-for="Account" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="OrderNumber" class="control-label"></label>
        <input asp-for="OrderNumber" class="form-control" type="number" />
        <span asp-validation-for="OrderNumber" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="BirthDate" class="control-label"></label>
        <input asp-for="BirthDate" class="form-control" type="date" />
        <span asp-validation-for="BirthDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Gender" class="control-label"></label>
        <select asp-for="Gender" class="form-control" asp-items="Html.GetEnumSelectList<Gender>()"></select>
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PhoneNumber" class="control-label"></label>
        <input asp-for="PhoneNumber" class="form-control" />
        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label class="control-label">Groups (optional)</label>
        <div class="checkbox-group">
            @if (ViewBag.Groups != null)
            {
                @foreach (var group in ViewBag.Groups)
                {
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" name="GroupIds" value="@group.Id" 
                               @(Model.GroupIds != null && Model.GroupIds.Contains(group.Id) ? "checked" : "") />
                        <label class="form-check-label">@group.Name</label>
                    </div>
                }
            }
            else
            {
                <p>No groups available.</p>
            }
        </div>
        <span asp-validation-for="GroupIds" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}